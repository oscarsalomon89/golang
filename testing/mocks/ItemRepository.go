// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	domain "github.com/teamcubation/neocamp-meli/testing/domain"
)

// ItemRepository is an autogenerated mock type for the ItemRepository type
type ItemRepository struct {
	mock.Mock
}

// GetItemByID provides a mock function with given fields: itemID
func (_m *ItemRepository) GetItemByID(itemID uint) error {
	ret := _m.Called(itemID)

	if len(ret) == 0 {
		panic("no return value specified for GetItemByID")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint) error); ok {
		r0 = rf(itemID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveItem provides a mock function with given fields: item
func (_m *ItemRepository) SaveItem(item domain.Item) error {
	ret := _m.Called(item)

	if len(ret) == 0 {
		panic("no return value specified for SaveItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Item) error); ok {
		r0 = rf(item)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewItemRepository creates a new instance of ItemRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewItemRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ItemRepository {
	mock := &ItemRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
